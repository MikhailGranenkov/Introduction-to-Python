# Задача 1
# print_operation_table
# Напишите функцию print_operation_table(operation, num_rows, num_columns),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки
# и столбца. По умолчанию номер столбца и строки = 9.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны.
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).
# Если строк меньше двух, выдайте текст
# ОШИБКА! Размерности таблицы должны быть больше 2!.

# Примечание: бинарной операцией называется любая операция,
# у которой ровно два аргумента, как, например, у операции умножения.
# Между элементами должен быть 1 пробел, в конце строки пробел не нужен.

# Пример

# На входе:

# print_operation_table(lambda x, y: x * y, 3, 3)
# На выходе:

# 1 2 3
# 2 4 6 
# 3 6 9


# def print_operation_table(operation, num_rows, num_columns):

#     if num_rows <= 2 or num_columns <= 2:
#         print("ОШИБКА! Размерности таблицы должны быть больше 2!")
#         return

#     for i in range(1, num_rows + 1):
#         for j in range(1, num_columns + 1):
#             print(operation(i, j), end=' ')
#         print()

# print_operation_table(lambda x, y: x * y, 3, 5)


# Задача 2
# Винни-Пух
# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм.
# Поскольку разобраться в его кричалках не настолько просто,
# насколько легко он их придумывает, Вам стоит написать программу.
# Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв)
# в каждой фразе стихотворения одинаковое.
# Фраза может состоять из одного слова, если во фразе несколько слов,
# то они разделяются дефисами.
# Фразы отделяются друг от друга пробелами.

# Стихотворение  Винни-Пух передаст вам автоматически в переменную stroka в виде строки.
# В ответе напишите Парам пам-пам, если с ритмом все в порядке и Пам парам,
# если с ритмом все не в порядке.
# Если фраза только одна, то ритм определить не получится и необходимо вывести:
# Количество фраз должно быть больше одной!.

# 2) Пользователь вводит строку, которая разделена по пробелам на фразы,
# если все фразы имеют одинаковое количество гласных то вывести “Парам пам-пам”,
# в противном случае “Пам парам”.

# Пример

# На входе:

# stroka = 'пара-ра-рам рам-пам-папам па-ра-па-дам'
# На выходе:

# Парам пам-пам


# def check_vowels(stroka):
#     vowels_count = {}
#     for phrase in stroka:
#         vowels = 0
#         for char in phrase:
#             if char in 'аеиоуэёя':
#                 vowels += 1
#         if vowels in vowels_count:
#             vowels_count[vowels] += 1
#         else:
#             vowels_count[vowels] = 1
#     return vowels_count

# def check_equal_vowels(vowels_count):
#     for vowels, count in vowels_count.items():
#         if count == 1:
#             return False
#     return True

# def check_stroka(stroka):
#     vowels_count = check_vowels(stroka)
#     if check_equal_vowels(vowels_count):
#         return "Парам пам-пам"
#     else:
#         return "Пам парам"

# def check_phrase_count(stroka):
#     if len(stroka) < 2:
#         return "Количество фраз должно быть больше одной!"
#     else:
#         return check_stroka(stroka)

# stroka = input("Введите строку, разделенную по пробелам на фразы: ").split()
# print(check_phrase_count(stroka))